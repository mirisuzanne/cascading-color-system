@use '../config';
@use 'sass:string';

[data-ccs-colors] {
  // offset lightness and saturation based on contrast
  --ccs-contrast--user-percent: calc(var(--ccs-contrast--user) * 1%);
  --ccs-contrast: var(--ccs-contrast--user-percent, var(--ccs-contrast--theme, var(--ccs-contrast-config, 45%)));

  // initial lightness values
  --ccs-l--user-percent: calc(var(--ccs-l--user) * 1%);
  --ccs-l: var(--ccs-l--user-percent, var(--ccs-l--theme, var(--ccs-lightness--config, 50%)));
  --ccs-l--fg-contrast: calc(var(--ccs-l) + var(--ccs-contrast) * var(--ccs-invert));
  --ccs-l--bg-contrast: calc(var(--ccs-l) + var(--ccs-contrast) * var(--ccs-mode));

  // initial saturation values
  --ccs-fade-background: var(--ccs-fade-background--theme, var(--ccs-fade-background--config, 0%));
  --ccs-s--user-percent: calc(var(--ccs-s--user) * 1%);
  --ccs-s: var(--ccs-s--user-percent, var(--ccs-s--theme, var(--ccs-saturation--config, 50%)));
  --ccs-s--fg-contrast: calc(var(--ccs-s) - var(--ccs-contrast) * 0.75);
  --ccs-s--bg-contrast: calc(var(--ccs-s--fg-contrast) - var(--ccs-fade-background));
  --ccs-s--neutral: var(--ccs-s-neutral--theme, var(--ccs-s-neutral--config, var(--ccs-s--bg-contrast)));

  // full contrast colors, foreground and background
  --ccs--bg-full: hsl(0, 0%, calc(100% * var(--ccs-mode)));
  --ccs--fg-full: hsl(0, 0%, calc(100% * var(--ccs-invert)));

  @each $color, $hue in config.$hues {
    $default: if($color == 'prime', $hue or 330, var(--ccs-h--prime));
    $s: if(string.index($color, 'neutral'), '--neutral', null);

    --ccs-h--#{$color}: var(--ccs-#{$color}--user, var(--ccs-#{$color}--theme, var(--ccs-#{$color}--config, #{$default})));

    --ccs-#{$color}: hsl(
      var(--ccs-h--#{$color}),
      var(--ccs-s#{$s or ''}),
      var(--ccs-l)
    );
    --ccs-#{$color}--fg-full: hsl(
      var(--ccs-h--#{$color}),
      var(--ccs-s#{$s or '--fg-contrast'}),
      var(--ccs-l--fg-contrast)
    );
    --ccs-#{$color}--bg-full: hsl(
      var(--ccs-h--#{$color}),
      var(--ccs-s#{$s or '--bg-contrast'}),
      var(--ccs-l--bg-contrast)
    );

    @if (config.$fades) {
      --ccs-#{$color}--fade: hsla(
        var(--ccs-h--#{$color}),
        var(--ccs-s#{$s or ''}),
        var(--ccs-l),
        var(--ccs-fade)
      );
      --ccs-#{$color}--fg-full-fade: hsla(
        var(--ccs-h--#{$color}),
        var(--ccs-s#{$s or '--fg-contrast'}),
        var(--ccs-l--fg-contrast),
        var(--ccs-fade)
      );
      --ccs-#{$color}--bg-full-fade: hsla(
        var(--ccs-h--#{$color}),
        var(--ccs-s#{$s or '--bg-contrast'}),
        var(--ccs-l--bg-contrast),
        var(--ccs-fade)
      );
    }

  }

  // default variable colors
  background-color: var(--ccs-background, var(--ccs--bg-full));
  color: var(--ccs-color, var(--ccs--fg-full));
}
