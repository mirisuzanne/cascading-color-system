// The default theme is monochrome.
// We also provide pre-defined
// `complement`, `triad`, and `adjacent` themes
// based on the primary hue provided.
//
// # theme api (units required):
// --ccs-prime--theme
// --ccs-accent--theme
// --ccs-s--theme
// --ccs-l--theme
// --ccs-contrast--theme
//
// # user api (no units):
// --ccs-prime--user
// --ccs-s--user
// --ccs-l--user
// --ccs-contrast--user

[data-ccs-theme] {
  // optionally set `--ccs-prime--user-*` values with JS
  --ccs-h--prime: var(--ccs-prime--user, var(--ccs-prime--theme, var(--ccs-prime--config)));
  --ccs-h--accent: var(--ccs-accent--theme, var(--ccs-accent--config, var(--ccs-h--prime)));

  // offset lightness and saturation based on contrast
  --ccs-contrast--user-percent: calc(var(--ccs-contrast--user) * 1%);
  --ccs-contrast: var(--ccs-contrast--user-percent, var(--ccs-contrast--theme, var(--ccs-contrast-config, 45%)));

  // initial lightness and saturation values
  --ccs-l--user-percent: calc(var(--ccs-l--user) * 1%);
  --ccs-l: var(--ccs-l--user-percent, var(--ccs-l--theme, var(--ccs-lightness--config, 50%)));
  --ccs-l--contrast: calc(var(--ccs-l) + var(--ccs-contrast));
  --ccs-s--user-percent: calc(var(--ccs-s--user) * 1%);
  --ccs-s: var(--ccs-s--user-percent, var(--ccs-s--theme, var(--ccs-saturation--config, 50%)));
  --ccs-s--contrast: calc(var(--ccs-s) - var(--ccs-contrast) * 0.75);
}

[data-ccs-theme='complement'] {
  --ccs-accent--theme: calc(var(--ccs-h--prime) + 180);
}

[data-ccs-theme='triad'] {
  --ccs-accent--theme: calc(var(--ccs-h--prime) + (120 * var(--ccs-mode)));
}

[data-ccs-theme='adjacent'] {
  --ccs-accent--theme: calc(var(--ccs-h--prime) + (60 * var(--ccs-mode)));
}

[data-ccs-theme="contrast"] {
  --ccs-contrast: 200%;
  --ccs-custom-contrast: none;
}
